# ************************************NOTES************************************
# Google Style Guide: https://google.github.io/styleguide/pyguide.html
# THG Style Guide: https://docs.python-guide.org/writing/style/
# PEP8 introduction: https://realpython.com/python-pep8/
# About auto-formatters: https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/auto-formatters.html
# About Legacy Projects: https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/legacy.html
# About CI: https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/ci.html
# About pylint: https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/pylint.html
# About extra tools: https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/extras.html
# ******************************************************************************

# *************************************TOX*************************************
[tox]
# https://tox.readthedocs.io/en/latest/index.html
# https://tox.readthedocs.io/en/latest/install.html
# https://tox.readthedocs.io/en/latest/config.html
# https://tox.readthedocs.io/en/latest/example/basic.html
# https://tox.readthedocs.io/en/latest/example/general.html
# https://tox.readthedocs.io/en/latest/example/package.html
# https://tox.readthedocs.io/en/latest/example/pytest.html
# https://tox.readthedocs.io/en/latest/example/documentation.html
# https://tox.readthedocs.io/en/latest/plugins.html

# Can be used for a local PyPI Registry
indexserver =
  default = https://pypi.org/simple
envlist =
  style-guide,
  static-analysis,
  py36,
  py37,

# User "setup.py develop" instead of sdist
usedevelop=True

[testenv]
platform = linux|linux2|darwin
setenv =
  AN_EXAMPLE_ENV = {toxinidir}/some
# Do not prevent symbolic links
alwayscopy = False
#*******************************************************************************


# *********************************Style Guide*********************************
# Command: tox -e style-guide -p all
# Info: wemake-python-styleguide (flake8 + plugins)
[testenv:style-guide]
# https://wemake-python-stylegui.de/en/latest/index.html
# https://wemake-python-stylegui.de/en/latest/pages/usage/configuration.html
# https://wemake-python-stylegui.de/en/latest/pages/usage/violations/index.html
# http://pycodestyle.pycqa.org/en/latest/intro.html
# http://flake8.pycqa.org/en/latest/user/configuration.html
# http://flake8.pycqa.org/en/latest/user/options.html
# http://flake8.pycqa.org/en/latest/user/error-codes.html
# http://flake8.pycqa.org/en/latest/user/violations.html
# https://wemake-python-stylegui.de/en/latest/pages/usage/formatter.html
# https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/plugins.html
# http://flake8.pycqa.org/en/latest/user/options.html?highlight=per-file-ignores#cmdoption-flake8-per-file-ignores

# TODO: docs conform
# https://www.python.org/dev/peps/pep-0257/
# http://www.pydocstyle.org/en/2.1.1/index.html

deps =
  wemake-python-styleguide
commands = flake8 dbsg


[flake8]
# Wemake Python Style Guide Configuration
# TODO: more options from violations: https://wemake-python-stylegui.de/en/latest/pages/usage/violations/index.html

min-name-length = 1
# We don't control ones who use our code
i-control-code = False
nested-classes-whitelist =
  Meta
# Max of noqa in a module
max-noqa-comments = 5
max-returns = 5
max-awaits = 5
max-local-variables = 10
# Max of expressions in a function
max-expressions = 10
# Max args in a function
max-arguments = 5
# Max classes and functions in a single module
max-module-members = 20
max-methods = 10
# Max line complexity measured in AST nodes
max-line-complexity = 20
# Max Jones Score for a module: the median of all lines complexity sum
max-jones-score = 15
# Max amount of cognitive complexity per function
max-cognitive-score = 12
# Max amount of cognitive complexity per module
max-cognitive-average = 8
max-imports = 15
max-imported-names = 50
# Max of expression usages in a module
max-module-expressions = 10
# Max of expression usages in a function
max-function-expressions = 10
max-base-classes = 3
max-decorators = 3
# Max of repeated string constants in your modules
max-string-usages = 5
max-try-body-length = 1
max-asserts = 5
# Max number of access level in an expression
max-access-level = 5
# maximum number of public instance attributes
max-attributes = 12

indent='   '

max-line-length = 80
max-doc-length = 80

# https://pypi.org/project/flake8-quotes/
inline-quotes = '

# https://wemake-python-stylegui.de/en/latest/pages/usage/formatter.html
# format = '%(path)s:%(row)d:%(col)d: %(code)s %(text)s'
format = wemake
show-source = True
# Print total number of errors
count = True
# statistics = True
# benchmark = True

exclude =
  .tox,
  migrations,
  stubs,
  dist,
  build,
  virtualenv

# https://wemake-python-stylegui.de/en/latest/pages/usage/violations/index.html
# http://pycodestyle.pycqa.org/en/latest/intro.html
ignore =
  # All the isort: it's too buggy
  I,
  # Encoding checks are redundant: we are always using UTF8
  C,
  # Found `f` string [bc it's like your opinion, bro]
  WPS305,
  # Found using `@staticmethod` [bc it's like your opinion, bro]
  WPS602,
  # Found wrong variable name [bc names like "data" and "handler" aren't bad]
  WPS110,
  # Found upper-case constant in a class [outright stupid]
  WPS115,
  # Found class without a base class [worse than stupid]
  WPS306,
  # Found too deep nesting [discourages writing "complex" code]
  WPS220,
  # Found incorrect unpacking target [opinionated bs]
  WPS414,
  # W503  line break before binary operator [goes against PEP8]
  W503,
  # WPS337 Found multiline conditions [bc they are better than nested ones]
  WPS337,
  # WPS336 Found explicit string concat [an utter bullshit]
  WPS336,
  # WPS407 Found mutable module constant
  #   [bs, currently there is no frozendict in standard library]
  WPS407,

# http://flake8.pycqa.org/en/latest/user/options.html?highlight=per-file-ignores#cmdoption-flake8-per-file-ignores
per-file-ignores =
  # WPS421 [bc conf has to use sys.exit(1)]
  # T001 [bc conf has to print a message, while logging isn't set up]
  # WPS609 Found direct magic attribute usage: __dict__
  #   [bc we need some meta programming]
  # WPS440 Found block variables overlap: word [it makes sense here]
  # A003 "min" is a python builtin, consider renaming the class attribute
  #   [it makes sense here]
  # WPS601 Found shadowed class attribute: session_pool
  #   [it makes sense here]
  # WPS226 Found string constant over-use: ,
  #   [it makes sense here]
  # WPS204 Found overused expression: []; used 13 times
  #   FIXME: [currently it makes sense; may rafactor later]
  # WPS210 Found too many local variables: 13
  #   FIXME: [currently it makes sense; may rafactor later]
  configuration.py:WPS421,T001,WPS609,WPS440,A003,WPS601,WPS226,WPS204,WPS210

  # WPS210 Found too many local variables: 14 [bc introspection is difficult]
  # WPS213 Found too many expressions: 21 [bc introspection is difficult]
  # RST FIXME idk how to properly write notes at the time
  introspection.py:WPS210,WPS213,RST

  # F401 imported but unused
  __init__.py:F401

  # FIXME: might refactor some of these later
  # WPS213 Found too many expressions [bc python plugin is difficult]
  # WPS121 Found usage of a variable marked as unused: _ [makes sense]
  # WPS122 Found all unused variables definition: _ [makes sense]
  # WPS123 Found wrong unused variable name: __ [makes sense]
  # Q001  Remove bad quotes from multiline string [makes sense for the plugin]
  # N400: Found backslash that is used for line breaking [makes sense]
  # WPS230 Found too many public instance attributes [yep, it's difficult]
  # WPS226 Found string constant over-use [yes, and this is OK]
  python*plugin.py:WPS213,WPS121,WPS122,WPS123,Q001,N400,WPS230,WPS226


[isort]
# https://isort.readthedocs.io/en/latest/#configuring-isort
indent='    '
multi_line_output=3
known_third_party=marshmallow
known_standard_library=typing

#*******************************************************************************


# *******************************Static Analysis*******************************
# Command: tox -e static-analysis
# Info: pylint
[testenv:static-analysis]
deps =
  pylint
commands = pylint --rcfile=tox.ini dbsg

# https://www.pylint.org/
# https://pylint.readthedocs.io/en/latest/
# https://pylint.readthedocs.io/en/latest/user_guide/message-control.html
# https://pylint.readthedocs.io/en/latest/user_guide/options.html
# https://pylint.readthedocs.io/en/latest/technical_reference/features.html

[MASTER]
jobs=4

[REPORTS]
# Only error messages
reports=no
output-format=colorized
score=yes

[MISCELLANEOUS]
# List of note tags to take in consideration, separated by a comma.
notes=FIXME,
      XXX,
      TODO

[TYPECHECK]
# List of decorators that produce context managers, such as
# contextlib.contextmanager. Add to this list to register other decorators that
# produce valid context managers.
contextmanager-decorators=contextlib.contextmanage

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
ignored-classes=optparse.Values,thread._local,_thread._local

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=

[SIMILARITIES]
# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no

# Minimum lines number of a similarity.
min-similarity-lines=5

[LOGGING]
# Format style used to check logging format string. `old` means using %
# formatting, while `new` is for `{}` formatting.
logging-format-style=new

# Logging modules to check that the string format arguments are in logging
# function parameter format.
logging-modules=logging

[MESSAGES CONTROL]
disable=
  # Naming conform [style guide domain]
  C0103,
  # Wrong hanging indentation before block [style guide domain]
  C0330,
  # Line too long [sg domain]
  C0301,
  # Naming... [sg domain]
  C0204,
  # Errors, like "too few public methods] [style guide domain]
  R,
  # notes [not an error]
  W0511,
  # logging-not-lazy and logging-format-interpolation [too buggy]
  W1201,W1202,

# ******************************************************************************
